package ch.ennio.sileno.hoseabe

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Spinner
import android.widget.TextView
import androidx.fragment.app.activityViewModels
import androidx.navigation.Navigation
import ch.ennio.sileno.hoseabe.databinding.FragmentMainMenuBinding


/**
 * A simple [Fragment] subclass.
 * Use the [FragmentMainMenu.newInstance] factory method to
 * create an instance of this fragment.
 */
class FragmentMainMenu : Fragment() {
    private var _binding: FragmentMainMenuBinding? = null
    private val binding get() = _binding!!

    private val playerCountModel:  PlayerCounterViewModel by activityViewModels()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?): View? {
        //adapt also this name (the class will be autogenerated)
        _binding = FragmentMainMenuBinding.inflate(inflater, container, false)
        initViews()

        return binding.root
    }

    fun closeApp() {
        System.exit(0);
    }

    private fun initViews() {
        initStartButton()
        initCloseButton()
        initSpinner()
    }

    private fun initStartButton() {
        binding.buttonPlayerSelection.setOnClickListener {
            binding.motionLayout.transitionToEnd()
            requireView().postDelayed(kotlinx.coroutines.Runnable {
                Navigation.findNavController(binding.root).navigate(R.id.navigate_main_player)
            }, 1000) //Animation dauert 1 sec
        }
    }

    private fun initCloseButton() {
        binding.buttonClose.setOnClickListener {
            getActivity()?.finishAffinity()
            System.exit(0)
        }
    }

    private fun initSpinner() {
        val spinnerPlayerCount: Spinner = binding.spinnerPlayerCount
        ArrayAdapter.createFromResource(
            requireContext(),
            R.array.player_counts,
            R.layout.custom_spinner_item
        ).also { adapter ->
            adapter.setDropDownViewResource(R.layout.custom_spinner_dropdown_item)
            spinnerPlayerCount.adapter = adapter
        }
        spinnerPlayerCount.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
            override fun onItemSelected(p0: AdapterView<*>?, view: View?, position: Int, p3: Long) {
                if(view != null) {
                    val playerCountString: String = (view as TextView).text.toString()
                    playerCountModel.setValue(playerCountString.toInt())
                }
            }

            override fun onNothingSelected(p0: AdapterView<*>?) {
                playerCountModel.setValue(2)
            }
        }
    }
}